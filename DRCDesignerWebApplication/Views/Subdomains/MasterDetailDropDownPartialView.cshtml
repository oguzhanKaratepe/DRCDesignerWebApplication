@using DevExtreme.AspNet.Mvc.Builders
@using DRCDesignerWebApplication.ViewModels

<script>
    function gridBox_valueChanged(args, setValueMethod) {
        var $dataGrid = $("#dDBoxDataGrid");

        if ($dataGrid.length) {
            var dataGrid = $dataGrid.dxDataGrid("instance");
            dataGrid.selectRows(args.value, false);
        }
        setValueMethod(args.value);
    }
    function onSelectionChanged(e, dropDownBoxInstance) {
        var keys = e.selectedRowKeys;
        dropDownBoxInstance.option("value", keys);
    }
    function onCloseBtnClick(args, dropDownBoxInstance) {
        dropDownBoxInstance.close();
    }
</script>
@(Html.DevExtreme().DropDownBox()
          .Width("100%")
          .Value(new JS("data.ReferencedVersionIds"))
          .ValueExpr("Id")
          .DisplayExpr("VersionNumber")
          .DataSource(d => d.Mvc().LoadAction("GetReferenceOptions").Controller("SubdomainVersions").Key("Id").LoadParams(new { Id = 1}))
          .Placeholder("Select Reference")
      .ShowClearButton(true)
          .OnValueChanged(@"function(args) { gridBox_valueChanged(args, setValue); }")
          .DropDownOptions(op =>
          {
              op.Width(290);
              op.MinHeight(330);
          })
          .ContentTemplate(@<text>
            @(Html.DevExtreme().DataGrid<SubdomainVersionViewModel>()
                      .ID("dDBoxDataGrid")
                      .Selection(selection => selection.Mode(SelectionMode.Multiple))
                      .ElementAttr(new { style = "margin-top:-30px;" })
                      .Height(330)
                      .Width(250)
                     .Scrolling(scrolling => scrolling.Mode(GridScrollingMode.Virtual))
                      .DataSource(d => d.Mvc().LoadAction("GetReferenceOptions").Controller("SubdomainVersions").Key("Id").LoadParams(new { Id =1}))
                      .DataSourceOptions(o => o.Group("SubdomainId"))
                      .GroupPanel(groupPanel => groupPanel.Visible(true))
                      .Columns(columns =>
                      {
                          columns.AddFor(m => m.VersionNumber);
                          columns.AddFor(m => m.SubdomainName).GroupIndex(0).Caption("");

                      })
                      .SelectedRowKeys(new JS("component.option('value')"))
                      .OnSelectionChanged(@"function(args) {onSelectionChanged(args, component); }")
            )
            @(Html.DevExtreme().Button()
                      .ElementAttr(new { style = "margin-top:5px; margin-bottom:5px; float:right" })
                      .Text("Close")
                      .OnClick(@"function(args) { onCloseBtnClick(args, component); }"))
        </text>)
)
