
@using DevExtreme.AspNet.Mvc.Builders
@using DRCDesignerWebApplication.ViewModels

@model SubdomainViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "index";
}
@{
    Layout = "_Layout";
}

<style>
    #gridContainer {
        margin-left: 2%
    }
</style>
<div class="d-flex align-content-center mt-3 mr-1">
    @(Html.DevExtreme().DataGrid<Subdomain>().ID("gridContainer")
                                       .ShowBorders(true)
                                  .Paging(paging => paging.PageSize(4))
                                        .SearchPanel(searchPanel => searchPanel
                                            .Visible(true)
                                            .Width(300)
                                            .Placeholder("Search..."))
                                        .Editing(editing =>
                                        {
                                            editing.Mode(GridEditMode.Cell);
                                            editing.AllowAdding(true);
                                            editing.AllowDeleting(true);
                                            editing.AllowUpdating(true);
                                            editing.UseIcons(true);

                                        })
                                       .Columns(columns =>
                                       {
                                           columns.AddFor(m => m.SubdomainName);
                                       })
                                         .DataSource(d => d.Mvc()
                                       .Controller("Subdomains")
                                       .LoadAction("Get")
                                       .UpdateAction("Put")
                                       .InsertAction("Post")
                                       .DeleteAction("Delete")
                                       .Key("Id")
                                   ).MasterDetail(m => m
                                      .Enabled(true)
                                      .Template(new TemplateName("gridContainer-details"))
                          )
                  .OnToolbarPreparing("toolbar_preparing")
    )

    <script>
        function toolbar_preparing(e) {
            var dataGrid = e.component;
            e.toolbarOptions.items.unshift({
                location: "before",
                widget: "dxSelectBox",

                options: {
                    width: 140,
                    items: [{
                        value: 1,
                        text: "Dexmo 0.1.0"
                    }, {
                        value: 2,
                        text: "Dexmo 1.0.0"
                    }
                        , {
                        value: 3,
                        text: "Dexmo 2.0.0"
                    }
                    ],
                    displayExpr: "text",
                    valueExpr: "value",
                    value: 1
                    //onValueChanged: function(e) {
                    //    dataGrid.clearGrouping();
                    //    dataGrid.columnOption(e.value, "groupIndex", 0);
                    //    $(".informer .count").text(getGroupCount(e.value));
                    //}
                }
            });
        }
        function getGroupCount(groupField) {
            var orders = [];

            $("#gridContainer").dxDataGrid("instance")
                .option("dataSource")
                .store
                .load()
                .done(function (data) {
                    orders = data;
                });

            return DevExpress.data.query(orders)
                .groupBy(groupField)
                .toArray().length;
        }
    </script>



    @using (Html.DevExtreme().NamedTemplate("gridContainer-details"))
    {
        @(Html.DevExtreme().TabPanel()
                              .Items(items =>
                              {
                                  items.Add()
                          .Title("Versıons")
                          .Template(new TemplateName("gridContainer-details-tab1Template"))
                          .Option("tabExtras", new { id = new JS("data.Id") });

                                  items.Add()
                          .Title("Roles")
                          .Template(new TemplateName("gridContainer-details-tab2Template"))
                          .Option("tabExtras", new { id = new JS("data.Id") });
                              })
        )
    }
    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template"))
    {

        //  <div>"<%- tabExtras.s %>"</div>

        @(Html.DevExtreme().DataGrid<SubdomainVersionViewModel>()
                                                                             .ColumnAutoWidth(true)
                                                                             .ShowBorders(true)
                                                                            .Editing(editing =>
                                                                            {
                                                                                editing.Mode(GridEditMode.Popup)
                                                                        .AllowUpdating(true)
                                                                        .AllowAdding(true)
                                                                        .AllowDeleting(true)

                                                                        .Popup(p => p
                                                                  .Title("Version Details")
                                                                  .ShowTitle(true)

                                                                  .Width(700)
                                                                  .Height(415)
                                                                        .Position(pos => pos
                                                                      .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                                                                      .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                                                                      .Of(new JS("window"))
                                                                  )
                                                                  ).Form(f => f.Items(items =>
                                                                  {
                                                                      items.AddGroup()

                                                                                  .ColCount(2)
                                                                                  .ColSpan(2)
                                                                                  .Items(groupItems =>
                                                                                  {

                                                                                      groupItems.AddSimple().DataField("VersionNumber");
                                                                                      groupItems.AddSimple().DataField("SourceVersionId");
                                                                                      groupItems.AddSimple().DataField("EditLock").Editor(editor => editor.Switch()).CssClass("ml-3");
                                                                                      groupItems.AddSimple().DataField("ReferencedVersionIds").Editor(editor => editor.TagBox().DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetReferenceOptions")
                                                                                          .Key("Id").LoadParams(new { id = new JS("tabExtras.id") }))
                                                                                          .DisplayExpr("VersionNumber")
                                                                                          .ValueExpr("Id").DataSourceOptions(o => o.Group("SubdomainName")).Grouped(true).ElementAttr(new { style = "border-bottom:0.5px solid;" }));

                                                                                  });


                                                                  }));
                                                                                editing.UseIcons(true);

                                                                            })
                                                                             .Columns(columns =>
                                                                             {
                                                                                 columns.AddFor(m => m.VersionNumber);
                                                                                 columns.AddFor(m => m.SourceVersionName);
                                                                                 columns.AddFor(m => m.SourceVersionId).Visible(false)
                                                                                     .Lookup(lookup => lookup.DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetSourceOptions")
                                                                                         .Key("Id").LoadParams(new { id = new JS("tabExtras.id") }))
                                                                                         .AllowClearing(true)
                                                                               .DisplayExpr("VersionNumber")
                                                                             .ValueExpr("Id")
                                                                         );
                                                                                 columns.AddFor(m => m.EditLock).Caption("Lock");
                                                                                 columns.AddFor(m => m.ReferencedVersionIds)
                                                                                     .CellTemplate(new JS("customizeRefDisplayText"))
                                                                         .Lookup(lookup => lookup
                                                                             .DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetReferenceOptions")
                                                                                 .Key("Id").LoadParams(new { id = new JS("tabExtras.id") }))
                                                                             .DisplayExpr("VersionNumber")
                                                                             .ValueExpr("Id")
                                                                         ).Caption("Add Reference");
                                                                             })
                                                                                   .DataSource(d => d.Mvc()
                                                                                       .Controller("SubdomainVersions")
                                                                                       .LoadAction("Get")
                                                                                       .UpdateAction("Put")
                                                                                       .InsertAction("Post")
                                                                                       .DeleteAction("Delete")
                                                                                       .Key("Id")
                                                                                       .LoadParams(new { id = new JS("tabExtras.id") })
                                                                                   ).OnRowInserting("function(e) {  e.data.SubdomainId = tabExtras.id;}")
        )
    }
    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab2Template"))
    {
        @(Html.DevExtreme().DataGrid().ID("gridContainer")
                                                                        .ShowBorders(true)
                                                                        .Paging(paging => paging.PageSize(6))

                                                                        .Editing(editing =>
                                                                        {
                                                                            editing.Mode(GridEditMode.Cell);
                                                                            editing.AllowAdding(true);
                                                                            editing.AllowDeleting(true);
                                                                            editing.AllowUpdating(true);

                                                                        })
                                                                        .Columns(columns =>
                                                                        {
                                                                            columns.Add().DataField("RoleName");

                                                                            columns.Add().DataField("SubdomainVersionRoleIds")
                                                                                .AllowSorting(false)
                                                                                .Caption("Role Areas")
                                                                                .Lookup(lookup => lookup
                                                                                    .DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetAllVersionWithSubdomainNames")
                                                                                        .Key("Id"))
                                                                                    .DisplayExpr("VersionNumber")
                                                                                    .ValueExpr("Id")

                                                                                );

                                                                        })

                                                                                          .DataSource(d => d.Mvc()
                                                                                              .Controller("Roles")
                                                                                              .LoadAction("Get")
                                                                                              .UpdateAction("Put")
                                                                                              .InsertAction("Post")
                                                                                              .DeleteAction("Delete")
                                                                                              .Key("Id")
                                                                                        ).SearchPanel(searchPanel => searchPanel
                                                                                            .Visible(true)
                                                                                            .Width(240)
                                                                                            .Placeholder("Search...")
                                                                                        )
                                                                                          .OnRowRemoved(@<text> function(e) { logEvent("RowRemoved"); } </text>)
        )
    }
    

</div>
<script>


    function customizeRefDisplayText(cell, info) {
        var rowData = info.row.data;

        if (!rowData)
            return;
        var texts = [];
        if (rowData.ReferencedVersionIds && rowData.ReferencedVersionIds.length) {
            for (var i = 0; i < rowData.ReferencedVersionIds.length; i++) {
                var value = rowData.ReferencedVersionIds[i];
                var displayText = info.column.lookup.calculateCellValue(value);
                if (displayText)
                    texts.push(displayText);
            }
        }
        cell.append(texts.toString());
    };
    function customizeDisplayText(cell, info) {
        var rowData = info.row.data;
     
        if (!rowData)
            return;
     
        var texts = [];
        if (rowData.SubdomainVersionRoleIds && rowData.SubdomainVersionRoleIds.length) {
            
            for (var i = 0; i < rowData.SubdomainVersionRoleIds.length; i++) {
                
                var value = rowData.SubdomainVersionRoleIds[i];
                var displayText = info.column.lookup.calculateCellValue(value);
             
                if (displayText)
                    texts.push(displayText);
            }
        }
        cell.append(texts.toString());

    };

</script>

@*.MasterDetail(md =>
{
md.Enabled(true);
md.Template(@<text>

    <div class="master-detail-caption  m-2"><%- data.SubdomainName %> Versions:</div>


</text>);

})*@

