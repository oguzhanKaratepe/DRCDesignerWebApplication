
@using DevExtreme.AspNet.Mvc.Builders
@using DRCDesignerWebApplication.ViewModels

@model SubdomainViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "index";
}
@{
    Layout = "_Layout";
}

<style>
    #gridContainer {
        margin-left: 2%
    }
    #help {
        margin-left: 99% !important;
        cursor: pointer !important;
        margin-top: -20px;
        
    }
</style>
<div class="d-flex align-content-center mt-3 mr-1">
    @(Html.DevExtreme().DataGrid<Subdomain>().ID("gridContainer")
                                                                                                                                                                                                              .ShowBorders(true)
                                                                                                                                                                                                              .Grouping(m => m.ExpandMode(GridGroupingExpandMode.ButtonClick))

                                                                                                                                                                                                              .Paging(paging => paging.PageSize(4))
                                                                                                                                                                                                              .SearchPanel(searchPanel => searchPanel
                                                                                                                                                                                                                  .Visible(true)
                                                                                                                                                                                                                  .Width(300)
                                                                                                                                                                                                                  .Placeholder("Search..."))
                                                                                                                                                                                                              .Editing(editing =>
                                                                                                                                                                                                              {
                                                                                                                                                                                                                  editing.Mode(GridEditMode.Cell);
                                                                                                                                                                                                                  editing.AllowAdding(true);
                                                                                                                                                                                                                  editing.AllowDeleting(true);
                                                                                                                                                                                                                  editing.AllowUpdating(true);
                                                                                                                                                                                                                  editing.UseIcons(true);

                                                                                                                                                                                                              })

                                                                                                                                                                                                          .OnRowExpanding("function(e) {e.component.collapseAll(-1);}")

                                                                                                                                                                                                                      .Columns(columns =>
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                          columns.AddFor(m => m.SubdomainName);
                                                                                                                                                                                                                      })
                                                                                                                                                                                                                      .DataSource(d => d.Mvc()
                                                                                                                                                                                                                          .Controller("Subdomains")
                                                                                                                                                                                                                          .LoadAction("Get")
                                                                                                                                                                                                                          .UpdateAction("Put")
                                                                                                                                                                                                                          .InsertAction("Post")
                                                                                                                                                                                                                          .DeleteAction("Delete")
                                                                                                                                                                                                                          .Key("Id")
                                                                                                                                                                                                                      ).MasterDetail(m => m
                                                                                                                                                                                                                          .Enabled(true)
                                                                                                                                                                                                                          .Template(new TemplateName("gridContainer-details"))
                                                                                                                                                                                                                      )
                                                                                                                                                                                                                      .OnToolbarPreparing("toolbar_preparing"))

    <script>
        function toolbar_preparing(e) {
            var dataGrid = e.component;
            e.toolbarOptions.items.unshift({
                location: "before",
                widget: "dxSelectBox",

                options: {
                    width: 140,
                    items: [{
                        value: 1,
                        text: "Dexmo 0.1.0"
                    }, {
                        value: 2,
                        text: "Dexmo 1.0.0"
                    }
                        , {
                        value: 3,
                        text: "Dexmo 2.0.0"
                    }
                    ],
                    displayExpr: "text",
                    valueExpr: "value",
                    value: 1
                    //onValueChanged: function(e) {
                    //    dataGrid.clearGrouping();
                    //    dataGrid.columnOption(e.value, "groupIndex", 0);
                    //    $(".informer .count").text(getGroupCount(e.value));
                    //}
                }
            });
        }

    </script>



    @using (Html.DevExtreme().NamedTemplate("gridContainer-details"))
    {
    
        <div id="help" class="cursor-pointer">
            <a id="link1" class="cursor-pointer dx-icon-help"></a>
        </div>
          
            @(Html.DevExtreme().Popover()
                  .Target("#link1")
                  .ShowEvent("mouseenter")
                  .HideEvent("mouseleave")
                  .Position(Position.Top)
                  .Width(300)
                  .Animation(a => a
                      .Show(s => s
                          .Type(AnimationType.Pop)
                          .From(new { scale = 0 })
                          .To(new { scale = 1 })
                      )
                      .Hide(h => h
                          .Type(AnimationType.Fade)
                          .From(1)
                          .To(0)
                      )
                  )
                  .ContentTemplate(@<text>
                                    Here is subdomain instance area. You can create your subdomain versions and define roles to that subdomain versions.
                                    </text>)
                  )
            @(Html.DevExtreme().TabPanel()
                  .Items(items =>
                  {
                      items.Add()
                          .Title("Versıons")
                          .Template(new TemplateName("gridContainer-details-tab1Template"))
                          .Option("tabExtras", new {id = new JS("data.Id")});

                      items.Add()
                          .Title("Roles")
                          .Template(new TemplateName("gridContainer-details-tab2Template"))
                          .Option("tabExtras", new {id = new JS("data.Id")});
                  }).OnTitleClick(@<text>
                                      function(e) {
                                      if(e.itemData.title=="Versıons"){
                                      $("#VersionsDataGrid").dxDataGrid("instance").refresh();
                                      }
                                      if(e.itemData.title=="Roles"){
                                      $("#RoleDataGrid").dxDataGrid("instance").refresh();
                                      }

                                      }
                                   </text>)
                  )
       
    }
    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab1Template"))
    {

        //  <div>"<%- tabExtras.s %>"</div>

        @(Html.DevExtreme().DataGrid<SubdomainVersionViewModel>().ID("VersionsDataGrid")
                                                                                                                       .ColumnAutoWidth(true)
                                                                                                                       .ShowBorders(true)
              .OnEditingStart("onEditingStart")  
              .OnInitNewRow("onInitNewRow")  
              .SearchPanel(searchPanel => searchPanel
                  .Visible(true)
                  .Width(240)
                  .Placeholder("Search...")
              )
                                                                                                                      .Editing(editing =>
                                                                                                                      {
                                                                                                                          editing.Mode(GridEditMode.Popup)
                                                                                                                              .AllowUpdating(true)
                                                                                                                              .AllowAdding(true)
                                                                                                                              .AllowDeleting(true)

                                                                                                                              .Popup(p => p

                                                                                                                                  .Title("Version Details")
                                                                                                                                  .ShowTitle(true).Width(700).Height(415)
                                                                                                                                  .Position(pos => pos
                                                                                                                                      .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                                                                                                                                      .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                                                                                                                                      .Of(new JS("window"))
                                                                                                                                  )
                                                                                                                              )
                                                                                                                              .Form(f => f.Items(items =>
                                                                                                                              {
                                                                                                                                  items.AddGroup()

                                                                                                                                      .ColCount(2)

                                                                                                                                      .ColSpan(2)
                                                                                                                                      .Items(groupItems =>
                                                                                                                                      {

                                                                                                                                          groupItems.AddSimple().DataField("VersionNumber");
                                                                                                                                          groupItems.AddSimple().DataField("SourceVersionId");
                                                                                                                                         
                                                                                                                                          groupItems.AddSimple().DataField("ReferencedVersionIds").Editor(editor => editor.TagBox().DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetReferenceOptions")
                                                                                                                                              .Key("Id").LoadParams(new {id = new JS("tabExtras.id")}))
                                                                                                                                              .DisplayExpr("VersionNumber")
                                                                                                                                              .ValueExpr("Id").DataSourceOptions(o => o.Group("SubdomainName")).Grouped(true).ElementAttr(new {style = "border-bottom:0.5px solid;"}));

                                                                                                                                          groupItems.AddSimple().DataField("EditLock").Editor(editor => editor.Switch()).CssClass("ml-3");
                                                                                                                                      });


                                                                                                                              })
                                                                                                                                  .CustomizeItem("customizeItem")
                                                                                                                          );
                                                                                                                             editing.UseIcons(true);

                                                                                                                             })
                                                                                                                                .Columns(columns =>
                                                                                                                                {
                                                                                                                                    columns.AddFor(m => m.VersionNumber).SortIndex(0).SortOrder(SortOrder.Desc);
                                                                                                                                    columns.AddFor(m => m.SourceVersionName);
                                                                                                                                    columns.AddFor(m => m.SourceVersionId).Visible(false)
                                                                                                                                        .Lookup(lookup => lookup.DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetSourceOptions")
                                                                                                                                            .Key("Id").LoadParams(new { id = new JS("tabExtras.id") }))
                                                                                                                                            .AllowClearing(true)
                                                                                                                                            .DisplayExpr("VersionNumber")
                                                                                                                                            .ValueExpr("Id")
                                                                                                                                    );
                                                                                                                                    columns.AddFor(m => m.EditLock).Caption("Lock");
                                                                                                                                    columns.AddFor(m => m.References);
                                                                                                                                    columns.AddFor(m => m.ReferencedVersionIds).Visible(false)
                                                                                                                                     // .CellTemplate(new JS("customizeRefDisplayText"))
                                                                                                                                     .Lookup(lookup => lookup
                                                                                                                                   .DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetReferenceOptions")
                                                                                                                                     .Key("Id").LoadParams(new { id = new JS("tabExtras.id") }))
                                                                                                                                    .DisplayExpr("VersionNumber")
                                                                                                                                    .ValueExpr("Id")
                                                                                                                             )
                                                                                                                                         .Caption("Add Reference");
                                                                                                                             })
                                                                                                                                   .DataSource(d => d.Mvc()
                                                                                                                                       .Controller("SubdomainVersions")
                                                                                                                                       .LoadAction("Get")
                                                                                                                                       .UpdateAction("Put")
                                                                                                                                       .InsertAction("Post")
                                                                                                                                       .DeleteAction("Delete")
                                                                                                                                       .Key("Id")
                                                                                                                                       .LoadParams(new { id = new JS("tabExtras.id") })
                                                                          ).OnRowInserting("function(e) {  e.data.SubdomainId = tabExtras.id;}")
                                                                     




        )
    }
    @using (Html.DevExtreme().NamedTemplate("gridContainer-details-tab2Template"))
    {
        @(Html.DevExtreme().DataGrid<RoleViewModel>().ID("RoleDataGrid")
                                                                                                                                                                                                                                                                                                      .ColumnAutoWidth(true)
                          .ShowBorders(true)
                         .Editing(editing =>
                         {
                             editing.Mode(GridEditMode.Popup)
                     .AllowUpdating(true)
                     .AllowAdding(true)
                     .AllowDeleting(true)

                     .Popup(p => p
                         .ShowTitle(true)
               .Title("Role Details")
                         .Width(500).Height(380)
                     .Position(pos => pos
                   .My(HorizontalAlignment.Center, VerticalAlignment.Center)
                   .At(HorizontalAlignment.Center, VerticalAlignment.Center)
                   .Of(new JS("window"))
               )
               ).Form(f => f.Items(items =>
               {
                   items.AddGroup()

                       .ColCount(1)
                       .ColSpan(2)
                               .Items(groupItems =>
                               {

                                   groupItems.AddSimple().DataField("RoleName").ColSpan(1);
                                   groupItems.AddSimple().DataField("SubdomainVersionRoleIds").ColSpan(2).Editor(editor => editor.TagBox().DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetSubdomainVersions")
                                       .Key("Id").LoadParams(new { subdomainId = new JS("tabExtras.id") }))
                                       .DisplayExpr("VersionNumber")
                                       .ValueExpr("Id"));

                               });


               }));
                             editing.UseIcons(true);

                         })
                     .Columns(columns =>
                     {

                         columns.AddFor(m => m.RoleName);
                         columns.AddFor(m => m.RoleVersionNumbers);
                         columns.AddFor(m => m.SubdomainVersionRoleIds).Visible(false)
                             // .CellTemplate(new JS("customizeRoleDisplayText"))
                             .Lookup(lookup => lookup
                                 .DataSource(d => d.Mvc().Controller("SubdomainVersions").LoadAction("GetSubdomainVersions")
                                     .Key("Id").LoadParams(new { subdomainId = new JS("tabExtras.id") }))
                                 .DisplayExpr("VersionNumber")
                                 .ValueExpr("Id")
                             ).Caption("Role Areas");
                     })
                                         .DataSource(d => d.Mvc()
                                           .Controller("Roles")
                                           .LoadAction("Get")
                                           .UpdateAction("Put")
                                           .InsertAction("Post")
                                           .DeleteAction("Delete").LoadParams(new { subdomainId = new JS("tabExtras.id") })
                                           .Key("Id")
                                     ).SearchPanel(searchPanel => searchPanel
                                         .Visible(true)
                                         .Width(240)
                                         .Placeholder("Search...")
                                     )
                                       .OnRowRemoved(@<text> function(e) { logEvent("RowRemoved"); } </text>)
        )
    }


</div>
<script>


    function customizeRefDisplayText(cell, info) {
        var rowData = info.row.data;
        if (!rowData)
            return;
        var texts = [];
        if (rowData.ReferencedVersionIds && rowData.ReferencedVersionIds.length) {
            for (var i = 0; i < rowData.ReferencedVersionIds.length; i++) {
                var value = rowData.ReferencedVersionIds[i];
                var displayText = info.column.lookup.calculateCellValue(value);
                if (displayText)
                    texts.push(displayText);
            }
        }
        cell.append(texts.toString());
    };

    function customizeRoleDisplayText(cell, info) {
        var rowData = info.row.data;

        if (!rowData)
            return;
        var texts = [];
        if (rowData.SubdomainVersionRoleIds && rowData.SubdomainVersionRoleIds.length) {
            for (var i = 0; i < rowData.SubdomainVersionRoleIds.length; i++) {
                var value = rowData.SubdomainVersionRoleIds[i];
                var displayText = info.column.lookup.calculateCellValue(value);
                if (displayText)
                    texts.push(displayText);
            }
        }
        cell.append(texts.toString());
    };

    function customizeDisplayText(cell, info) {
        var rowData = info.row.data;
     
        if (!rowData)
            return;
     
        var texts = [];
        if (rowData.SubdomainVersionRoleIds && rowData.SubdomainVersionRoleIds.length) {
            
            for (var i = 0; i < rowData.SubdomainVersionRoleIds.length; i++) {
                
                var value = rowData.SubdomainVersionRoleIds[i];
                var displayText = info.column.lookup.calculateCellValue(value);
             
                if (displayText)
                    texts.push(displayText);
            }
        }
        cell.append(texts.toString());

    };


    var itemVisible = true;  
  
    function onInitNewRow(opts) {  
        itemVisible = true;  
    }  
  
    function onEditingStart(opts) {  
        itemVisible = false;  
    }  
  
    function customizeItem(item) {  
        if (item.dataField == "SourceVersionId") {  
            item.visible = itemVisible;  
        }  
    }
</script>


