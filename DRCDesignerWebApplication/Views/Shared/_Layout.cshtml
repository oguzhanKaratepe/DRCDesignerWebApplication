<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>web designer</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <link href="~/css/devextreme/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/site.css" />
    <link href="~/css/devextreme/dx.common.css" rel="stylesheet" />
    <link href="~/css/devextreme/dx.material.purple.dark.css" rel="stylesheet" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js"
            asp-fallback-src="~/lib/popper.js/dist/umd/popper.min.js"
            asp-fallback-test="window.Popper"
            integrity="sha384-b/U6ypiBEHpOf/4+1nzFpr53nxSS+GLCkfwBdFNTxtclqqenISfwAzpKaMNFNmj4"
            crossorigin="anonymous">
    </script>
    <script src="~/js/devextreme/jquery.js"></script>
    <script src="~/js/devextreme/bootstrap.js"></script>

    <script src="~/js/devextreme/cldr.js"></script>
    <script src="~/js/devextreme/cldr/event.js"></script>
    <script src="~/js/devextreme/cldr/supplemental.js"></script>
    <script src="~/js/devextreme/cldr/unresolved.js"></script>

    <script src="~/js/devextreme/globalize.js"></script>
    <script src="~/js/devextreme/globalize/message.js"></script>
    <script src="~/js/devextreme/globalize/number.js"></script>
    <script src="~/js/devextreme/globalize/currency.js"></script>
    <script src="~/js/devextreme/globalize/date.js"></script>

    @* JSZip for client side export *@
    @*<script src="~/js/devextreme/jszip.js"></script>*@

    <script src="~/js/devextreme/dx.all.js"></script>
    <script src="~/js/devextreme/vectormap-data/world.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>

    <style>
        textarea,
        textarea.form-control,
        input.form-control,
        input[type=text],
        input[type=password],
        input[type=email],
        input[type=number],
        [type=text].form-control,
        [type=password].form-control,
        [type=email].form-control,
        [type=tel].form-control,
        [contenteditable].form-control {
            -webkit-box-shadow: inset 0 0px 0 #ddd !important;
            box-shadow: inset 0 0px 0 #ddd !important;
  
        }
     
    </style>
</head>
<body class="" style="background-color: #222;" >
    <div class="bg-dark h-100 ">
        @(Html.DevExtreme().Toolbar()
              
              .ElementAttr(new{style="border-bottom:1px solid;"})
                                  .ID("layout-toolbar")
                                  .Items(items =>
                                  {
                                      items.Add().Widget(w => w.Button()
                                          .Icon("menu")
                                          .OnClick("button_clickHandler")
                                          ).Location(ToolbarItemLocation.Before);

                                      items.Add()
                                          .Widget(w => w
                                              .Button()
                                              .Text("Help")
                                              .OnClick("helpButton_click")
                                      )
                                          .LocateInMenu(ToolbarItemLocateInMenuMode.Always);

                                    items.Add()
                                        .Widget(w => w
                                            .Button()
                                            .Text("..")
                                            .OnClick("printButton_click")

                                        )
                                        .LocateInMenu(ToolbarItemLocateInMenuMode.Always);

                                   
                                 

                                      items.Add()
                                          .Template(@<text><div class="toolbar-label"><b>DRC</b>Model Designer</div></text>)
                                                             .LocateInMenu(ToolbarItemLocateInMenuMode.Never)
                                          .Location(ToolbarItemLocation.Center);

                                  })
        )

        <div class="bg-dark text-light">
            @(Html.DevExtreme().Drawer()
                                  .ID("layout-drawer")
                                  .MinSize(50)
                                  .Opened(new JS("JSON.parse(sessionStorage.getItem('drawerOpened'))"))
                                  .RevealMode(DrawerRevealMode.Expand)
                                  .AnimationEnabled(true)
                                 
                                  .ActiveStateEnabled(true)
                                  .OpenedStateMode(DrawerOpenedStateMode.Shrink)
                                  .ActiveStateEnabled(true)
                                   .Template(@<text>
                                    @(Html.DevExtreme().List()
                                                  .Width(200)
                                          
                                                  //  .OnInitialized("list_onInitialized")
                                                  .Items(items =>
                                                  {
                                                     
                                                    items.Add().Text("Home").Icon("home").Option("path", @Url.Action("Index", "Home"));
                                                    items.Add().Text("Subdomains").Icon("folder").Option("path", @Url.Action("Index", "Subdomains"));
                                                    items.Add().Text("Roles").Icon("card").Option("path", @Url.Action("Index", "Roles"));
                                                      items.Add().Text("Cards").Icon("unselectall").Option("path", @Url.Action("Index", "DrcCards"));
                                                      
                                                  })
                                                  .KeyExpr("path")
                                                  .SelectionMode(ListSelectionMode.Single)
                                                  .OnSelectionChanged("list_onSelectionChanged")
                                    )
                                </text>)
                                                                      .Content(@<text>
                                                                        @RenderBody()</text>)
            )

        </div>

        <script type="text/javascript">

            function button_clickHandler() {

                var drawer = $("#layout-drawer").dxDrawer("instance");
                drawer.toggle();
                sessionStorage.setItem("drawerOpened", JSON.stringify(drawer.option("opened")));
            }

            function list_onSelectionChanged(e) {

                document.location = e.addedItems[0].path;

            }
            function helpButton_click() {
                window.location.href = "/Home/HelpPage";
               
            }


            function printButton_click() {
                DevExpress.ui.notify("... option has been clicked!");
            }

         
        </script>
    </div>
</body>
</html>
