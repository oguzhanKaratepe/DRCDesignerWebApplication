
@using DRCDesignerWebApplication.Controllers
@using DRCDesignerWebApplication.ViewModels
@model DRCDesignerWebApplication.ViewModels.DrcCardViewModel;


<style>
    .AdShadowCardId {
        visibility: hidden;
        max-height: 1px;
    }
    .AdShadowCardName {
        margin-top: 20px;
    }


    .CloseButton {
        float: right;
        margin-top: -50px;
    }
</style>


@(Html.DevExtreme().Popup()
              .ID("AddShadowCard-popup")
              .ElementAttr("class", "popup")
              .TitleTemplate(@<text>
                <div class="long-title text-light d-flex justify-content-center p-3"><h3>Add a Shadow Card</h3></div>
                <div class="CloseButton">
                    @(Html.DevExtreme().Button().Icon("close").OnClick("closeShadowAddButton"))
                </div>
            </text>)
                         .Width(450)
                         .Height(300)
                          .ShowTitle(true)
                          .Visible(false)
                          .DragEnabled(true)
                          .CloseOnOutsideClick(false)
                          .CloseOnBackButton(true)
                          .ShowCloseButton(true)

)


@using (Html.DevExtreme().NamedTemplate("Add-ShadowPopup-template"))
{
 
    @using (Html.BeginForm("PostShadow", "DrcCards", FormMethod.Post, new { id = "AddShadow" }))
    {

        @(Html.DevExtreme().SelectBox()
                      .DataSource(d => d.Mvc().Controller("DrcCards").LoadAction("GetShadowCardsSelectBox").Key("Id").LoadParams(new { SubdomainId = @Model.SubdomainId }))
                      .DataSourceOptions(o => o.Group("SubdomainName"))
                      .Grouped(true)
              .Placeholder("Select Main Card")
                      .DisplayExpr("DrcCardName")
                      .SearchEnabled(true)
                      .OnValueChanged("selectBox_valueChanged")
        )

        @Html.HiddenFor(m => m.SubdomainId)
    
        @(Html.DevExtreme().Form<DrcCardViewModel>()
                      .ID("form")
                      .ValidationGroup("ShadowDrcCard")
                      .LabelLocation(FormLabelLocation.Top)
                      .ReadOnly(false)
                      .ShowColonAfterLabel(true)
                      .Items(formItems =>
                      {
                          formItems.AddSimpleFor(m => m.DrcCardName).Label(l=>l.Text("Shadow Card Name")).CssClass("AdShadowCardName");
                          formItems.AddSimpleFor(m => m.Id).CssClass("AdShadowCardId");

                      })
                                                                                                       
                                                  )

        <div class="submitButton">
            @(Html.DevExtreme().Button()
                          .Text("Add Card")
                  .ValidationGroup("ShadowDrcCard")
                          .OnClick("addShadowClickHandler")
                          .UseSubmitBehavior(false)
            )
        </div>
    }



}

<script>
    function getFormInstance() {
        return $("#form").dxForm("instance");
    }

    function selectBox_valueChanged(data) {
        getFormInstance().option("formData", data.value);
    }

    function closeShadowAddButton() {

        $("#AddShadowCard-popup").dxPopup({
            visible: false
        });
    }

</script>